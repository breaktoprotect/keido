{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JS\\\\Desktop\\\\keido\\\\keido-react\\\\src\\\\components\\\\dayCalendar.jsx\";\nimport React, { Component } from \"react\";\nimport { eachDayOfInterval, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DayCalendar extends Component {\n  render() {\n    const {\n      displayStartDate,\n      displayEndDate,\n      scheduledItems\n    } = this.props; // Get number of days based on range\n\n    const days = eachDayOfInterval({\n      start: displayStartDate,\n      end: displayEndDate\n    });\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this), days.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: format(day, \"dd-MM-yyyy\")\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.populateSchedule(scheduledItems)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n  populateSchedule(scheduledItems) {\n    // Neat list of consultant and their correspond array of {day:project} keypair values\n    var consultantsTasks = {};\n    scheduledItems.map(item => {\n      item.consultants.map(consultant => {\n        if (consultantsTasks[consultant] !== undefined) {\n          consultantsTasks[consultant] = [{\n            [item.id]: {\n              startDate: item.startDate,\n              endDate: item.endDate\n            }\n          }];\n        } else {\n          consultantsTasks[consultant] = [...consultantsTasks[consultant], {\n            [item.id]: {\n              startDate: item.startDate,\n              endDate: item.endDate\n            }\n          }];\n        }\n      });\n    }); //debug\n\n    console.log(consultantsTasks);\n  }\n\n}\n\nexport default DayCalendar;","map":{"version":3,"names":["React","Component","eachDayOfInterval","format","DayCalendar","render","displayStartDate","displayEndDate","scheduledItems","props","days","start","end","map","day","populateSchedule","consultantsTasks","item","consultants","consultant","undefined","id","startDate","endDate","console","log"],"sources":["C:/Users/JS/Desktop/keido/keido-react/src/components/dayCalendar.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { eachDayOfInterval, format } from \"date-fns\";\r\n\r\nclass DayCalendar extends Component {\r\n    render() {\r\n        const { displayStartDate, displayEndDate, scheduledItems } = this.props;\r\n\r\n        // Get number of days based on range\r\n        const days = eachDayOfInterval({\r\n            start: displayStartDate,\r\n            end: displayEndDate,\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\"></th>\r\n                            {days.map((day) => (\r\n                                <th key={day} scope=\"col\">\r\n                                    {format(day, \"dd-MM-yyyy\")}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.populateSchedule(scheduledItems)}</tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    populateSchedule(scheduledItems) {\r\n        // Neat list of consultant and their correspond array of {day:project} keypair values\r\n        var consultantsTasks = {};\r\n        scheduledItems.map((item) => {\r\n            item.consultants.map((consultant) => {\r\n                if (consultantsTasks[consultant] !== undefined) {\r\n                    consultantsTasks[consultant] = [\r\n                        {\r\n                            [item.id]: {\r\n                                startDate: item.startDate,\r\n                                endDate: item.endDate,\r\n                            },\r\n                        },\r\n                    ];\r\n                } else {\r\n                    consultantsTasks[consultant] = [\r\n                        ...consultantsTasks[consultant],\r\n                        {\r\n                            [item.id]: {\r\n                                startDate: item.startDate,\r\n                                endDate: item.endDate,\r\n                            },\r\n                        },\r\n                    ];\r\n                }\r\n            });\r\n        });\r\n        //debug\r\n        console.log(consultantsTasks);\r\n    }\r\n}\r\n\r\nexport default DayCalendar;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,MAA5B,QAA0C,UAA1C;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;EAChCI,MAAM,GAAG;IACL,MAAM;MAAEC,gBAAF;MAAoBC,cAApB;MAAoCC;IAApC,IAAuD,KAAKC,KAAlE,CADK,CAGL;;IACA,MAAMC,IAAI,GAAGR,iBAAiB,CAAC;MAC3BS,KAAK,EAAEL,gBADoB;MAE3BM,GAAG,EAAEL;IAFsB,CAAD,CAA9B;IAKA,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAO,SAAS,EAAC,sBAAjB;QAAA,wBACI;UAAA,uBACI;YAAA,wBACI;cAAI,KAAK,EAAC;YAAV;cAAA;cAAA;cAAA;YAAA,QADJ,EAEKG,IAAI,CAACG,GAAL,CAAUC,GAAD,iBACN;cAAc,KAAK,EAAC,KAApB;cAAA,UACKX,MAAM,CAACW,GAAD,EAAM,YAAN;YADX,GAASA,GAAT;cAAA;cAAA;cAAA;YAAA,QADH,CAFL;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAWI;UAAA,UAAQ,KAAKC,gBAAL,CAAsBP,cAAtB;QAAR;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAiBH;;EAEDO,gBAAgB,CAACP,cAAD,EAAiB;IAC7B;IACA,IAAIQ,gBAAgB,GAAG,EAAvB;IACAR,cAAc,CAACK,GAAf,CAAoBI,IAAD,IAAU;MACzBA,IAAI,CAACC,WAAL,CAAiBL,GAAjB,CAAsBM,UAAD,IAAgB;QACjC,IAAIH,gBAAgB,CAACG,UAAD,CAAhB,KAAiCC,SAArC,EAAgD;UAC5CJ,gBAAgB,CAACG,UAAD,CAAhB,GAA+B,CAC3B;YACI,CAACF,IAAI,CAACI,EAAN,GAAW;cACPC,SAAS,EAAEL,IAAI,CAACK,SADT;cAEPC,OAAO,EAAEN,IAAI,CAACM;YAFP;UADf,CAD2B,CAA/B;QAQH,CATD,MASO;UACHP,gBAAgB,CAACG,UAAD,CAAhB,GAA+B,CAC3B,GAAGH,gBAAgB,CAACG,UAAD,CADQ,EAE3B;YACI,CAACF,IAAI,CAACI,EAAN,GAAW;cACPC,SAAS,EAAEL,IAAI,CAACK,SADT;cAEPC,OAAO,EAAEN,IAAI,CAACM;YAFP;UADf,CAF2B,CAA/B;QASH;MACJ,CArBD;IAsBH,CAvBD,EAH6B,CA2B7B;;IACAC,OAAO,CAACC,GAAR,CAAYT,gBAAZ;EACH;;AA1D+B;;AA6DpC,eAAeZ,WAAf"},"metadata":{},"sourceType":"module"}