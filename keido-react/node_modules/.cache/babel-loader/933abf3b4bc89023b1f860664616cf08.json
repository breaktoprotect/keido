{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JS\\\\Desktop\\\\keido\\\\keido-react\\\\src\\\\components\\\\dayCalendar.jsx\";\nimport React, { Component } from \"react\";\nimport { getScheduledItems } from \"../mockServices/schedule\";\nimport { eachDayOfInterval, format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DayCalendar extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      scheduleItems: getScheduledItems()\n    };\n  }\n\n  render() {\n    const {\n      displayStartDate,\n      displayEndDate\n    } = this.props; // Get number of days based on range\n\n    const days = eachDayOfInterval({\n      start: displayStartDate,\n      end: displayEndDate\n    });\n    days.map(day => console.log(format(day, \"dd-MM-yyyy\")));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: this.populateDays(displayStartDate, displayEndDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  populateDays(startDate, endDate) {\n    //const numOfDays = (endDate - startDate) / (1000 * 3600 * 24);\n    const days = eachDayOfInterval({\n      start: startDate,\n      end: endDate\n    });\n    days.map(day => console.log(format(day, \"dd-MM-yyyy\")));\n  }\n\n}\n\nexport default DayCalendar;","map":{"version":3,"names":["React","Component","getScheduledItems","eachDayOfInterval","format","DayCalendar","state","scheduleItems","render","displayStartDate","displayEndDate","props","days","start","end","map","day","console","log","populateDays","startDate","endDate"],"sources":["C:/Users/JS/Desktop/keido/keido-react/src/components/dayCalendar.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { getScheduledItems } from \"../mockServices/schedule\";\r\nimport { eachDayOfInterval, format } from \"date-fns\";\r\n\r\nclass DayCalendar extends Component {\r\n    state = { scheduleItems: getScheduledItems() };\r\n    render() {\r\n        const { displayStartDate, displayEndDate } = this.props;\r\n\r\n        // Get number of days based on range\r\n        const days = eachDayOfInterval({\r\n            start: displayStartDate,\r\n            end: displayEndDate,\r\n        });\r\n        days.map((day) => console.log(format(day, \"dd-MM-yyyy\")));\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"table table-dark\">\r\n                    <tr>\r\n                        {this.populateDays(displayStartDate, displayEndDate)}\r\n                    </tr>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    populateDays(startDate, endDate) {\r\n        //const numOfDays = (endDate - startDate) / (1000 * 3600 * 24);\r\n        const days = eachDayOfInterval({ start: startDate, end: endDate });\r\n        days.map((day) => console.log(format(day, \"dd-MM-yyyy\")));\r\n    }\r\n}\r\n\r\nexport default DayCalendar;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,iBAAT,EAA4BC,MAA5B,QAA0C,UAA1C;;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;EAAA;IAAA;IAAA,KAChCK,KADgC,GACxB;MAAEC,aAAa,EAAEL,iBAAiB;IAAlC,CADwB;EAAA;;EAEhCM,MAAM,GAAG;IACL,MAAM;MAAEC,gBAAF;MAAoBC;IAApB,IAAuC,KAAKC,KAAlD,CADK,CAGL;;IACA,MAAMC,IAAI,GAAGT,iBAAiB,CAAC;MAC3BU,KAAK,EAAEJ,gBADoB;MAE3BK,GAAG,EAAEJ;IAFsB,CAAD,CAA9B;IAIAE,IAAI,CAACG,GAAL,CAAUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACY,GAAD,EAAM,YAAN,CAAlB,CAAlB;IACA,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAO,SAAS,EAAC,kBAAjB;QAAA,uBACI;UAAA,UACK,KAAKG,YAAL,CAAkBV,gBAAlB,EAAoCC,cAApC;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EASH;;EAEDS,YAAY,CAACC,SAAD,EAAYC,OAAZ,EAAqB;IAC7B;IACA,MAAMT,IAAI,GAAGT,iBAAiB,CAAC;MAAEU,KAAK,EAAEO,SAAT;MAAoBN,GAAG,EAAEO;IAAzB,CAAD,CAA9B;IACAT,IAAI,CAACG,GAAL,CAAUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACY,GAAD,EAAM,YAAN,CAAlB,CAAlB;EACH;;AA1B+B;;AA6BpC,eAAeX,WAAf"},"metadata":{},"sourceType":"module"}