{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JS\\\\Desktop\\\\keido\\\\keido-react\\\\src\\\\components\\\\dayCalendar.jsx\";\nimport React, { Component } from \"react\";\nimport { eachDayOfInterval, format, isWithinInterval } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DayCalendar extends Component {\n  render() {\n    const {\n      displayStartDate,\n      displayEndDate,\n      scheduledItems\n    } = this.props; // Get number of days based on range\n\n    const days = eachDayOfInterval({\n      start: displayStartDate,\n      end: displayEndDate\n    }); // Map consultants to each project and start and end dates\n\n    const consultantsTasks = this.getConsultantsTasks(scheduledItems); //debug\n\n    console.log(consultantsTasks); //debug 1 consultant\n\n    const aConsultant = Object.keys(consultantsTasks)[0];\n    const aTasks = consultantsTasks[aConsultant];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), days.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: format(day, \"dd-MM-yyyy\")\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.populateRow(aConsultant, aTasks, days)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  getConsultantsTasks(scheduledItems) {\n    // Neat list of consultant and their correspond array of {day:project} keypair values\n    var consultantsTasks = {};\n    scheduledItems.map(item => {\n      item.consultants.map(consultant => {\n        if (consultantsTasks[consultant] === undefined) {\n          consultantsTasks[consultant] = [{\n            projectID: item.id,\n            startDate: item.startDate,\n            endDate: item.endDate\n          }];\n        } else {\n          consultantsTasks[consultant] = [...consultantsTasks[consultant], {\n            projectID: item.id,\n            startDate: item.startDate,\n            endDate: item.endDate\n          }];\n        }\n      });\n    });\n    return consultantsTasks;\n  }\n\n  populateSchedule(days, consultantsTasks) {\n    days.map(day => {\n      Object.keys(consultantsTasks).map(person => {\n        consultantsTasks[person].map(project => {\n          this.addToCal(day, project);\n        });\n      });\n    });\n  }\n\n  populateRow(consultant, tasks, days) {\n    //debug\n    console.log(\"tasks\", tasks); //pre-process\n\n    let columnItems = [];\n    let dayTask = \"\";\n    days.map(day => {\n      dayTask = \"\"; //Reset\n\n      tasks.map(task => {\n        let curtask = this.addToCal(day, task);\n\n        if (curtask !== undefined) {\n          if (dayTask !== \"\") {\n            dayTask += \", \" + this.addToCal(day, task);\n          } else {\n            dayTask = this.addToCal(day, task);\n          }\n        }\n      });\n      columnItems = [...columnItems, dayTask];\n    }); //debug\n\n    console.log(\"columnItems:\", columnItems);\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: consultant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), columnItems.map(item => /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"col-md-1\",\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this))]\n    }, consultant, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n  addToCal(day, project) {\n    if (isWithinInterval(day, {\n      start: this.convertToDateObject(project.startDate),\n      end: this.convertToDateObject(project.endDate)\n    })) {\n      console.log(project.startDate, project.endDate, day, true);\n      return project.projectID;\n    } else {\n      console.log(project.startDate, project.endDate, day, false);\n      return;\n    }\n  }\n\n  convertToDateObject(dateString) {\n    const dayMonthYearArray = dateString.split(\"-\");\n    return new Date(dayMonthYearArray[2], dayMonthYearArray[1] - 1, // Javascript counts month starting from 0\n    dayMonthYearArray[0]);\n  }\n\n}\n\nexport default DayCalendar;","map":{"version":3,"names":["React","Component","eachDayOfInterval","format","isWithinInterval","DayCalendar","render","displayStartDate","displayEndDate","scheduledItems","props","days","start","end","consultantsTasks","getConsultantsTasks","console","log","aConsultant","Object","keys","aTasks","map","day","populateRow","item","consultants","consultant","undefined","projectID","id","startDate","endDate","populateSchedule","person","project","addToCal","tasks","columnItems","dayTask","task","curtask","convertToDateObject","dateString","dayMonthYearArray","split","Date"],"sources":["C:/Users/JS/Desktop/keido/keido-react/src/components/dayCalendar.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { eachDayOfInterval, format, isWithinInterval } from \"date-fns\";\r\n\r\nclass DayCalendar extends Component {\r\n    render() {\r\n        const { displayStartDate, displayEndDate, scheduledItems } = this.props;\r\n\r\n        // Get number of days based on range\r\n        const days = eachDayOfInterval({\r\n            start: displayStartDate,\r\n            end: displayEndDate,\r\n        });\r\n\r\n        // Map consultants to each project and start and end dates\r\n        const consultantsTasks = this.getConsultantsTasks(scheduledItems);\r\n\r\n        //debug\r\n        console.log(consultantsTasks);\r\n\r\n        //debug 1 consultant\r\n        const aConsultant = Object.keys(consultantsTasks)[0];\r\n        const aTasks = consultantsTasks[aConsultant];\r\n\r\n        return (\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr className=\"bg-secondary\">\r\n                            <th scope=\"col\"></th>\r\n                            {days.map((day) => (\r\n                                <th key={day} scope=\"col\">\r\n                                    {format(day, \"dd-MM-yyyy\")}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.populateRow(aConsultant, aTasks, days)}</tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getConsultantsTasks(scheduledItems) {\r\n        // Neat list of consultant and their correspond array of {day:project} keypair values\r\n        var consultantsTasks = {};\r\n        scheduledItems.map((item) => {\r\n            item.consultants.map((consultant) => {\r\n                if (consultantsTasks[consultant] === undefined) {\r\n                    consultantsTasks[consultant] = [\r\n                        {\r\n                            projectID: item.id,\r\n                            startDate: item.startDate,\r\n                            endDate: item.endDate,\r\n                        },\r\n                    ];\r\n                } else {\r\n                    consultantsTasks[consultant] = [\r\n                        ...consultantsTasks[consultant],\r\n                        {\r\n                            projectID: item.id,\r\n                            startDate: item.startDate,\r\n                            endDate: item.endDate,\r\n                        },\r\n                    ];\r\n                }\r\n            });\r\n        });\r\n\r\n        return consultantsTasks;\r\n    }\r\n\r\n    populateSchedule(days, consultantsTasks) {\r\n        days.map((day) => {\r\n            Object.keys(consultantsTasks).map((person) => {\r\n                consultantsTasks[person].map((project) => {\r\n                    this.addToCal(day, project);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    populateRow(consultant, tasks, days) {\r\n        //debug\r\n        console.log(\"tasks\", tasks);\r\n\r\n        //pre-process\r\n        let columnItems = [];\r\n        let dayTask = \"\";\r\n\r\n        days.map((day) => {\r\n            dayTask = \"\"; //Reset\r\n            tasks.map((task) => {\r\n                let curtask = this.addToCal(day, task);\r\n                if (curtask !== undefined) {\r\n                    if (dayTask !== \"\") {\r\n                        dayTask += \", \" + this.addToCal(day, task);\r\n                    } else {\r\n                        dayTask = this.addToCal(day, task);\r\n                    }\r\n                }\r\n            });\r\n            columnItems = [...columnItems, dayTask];\r\n        });\r\n\r\n        //debug\r\n        console.log(\"columnItems:\", columnItems);\r\n\r\n        return (\r\n            <tr key={consultant}>\r\n                <th>{consultant}</th>\r\n                {columnItems.map((item) => (\r\n                    <td className=\"col-md-1\">{item}</td>\r\n                ))}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    addToCal(day, project) {\r\n        if (\r\n            isWithinInterval(day, {\r\n                start: this.convertToDateObject(project.startDate),\r\n                end: this.convertToDateObject(project.endDate),\r\n            })\r\n        ) {\r\n            console.log(project.startDate, project.endDate, day, true);\r\n            return project.projectID;\r\n        } else {\r\n            console.log(project.startDate, project.endDate, day, false);\r\n            return;\r\n        }\r\n    }\r\n\r\n    convertToDateObject(dateString) {\r\n        const dayMonthYearArray = dateString.split(\"-\");\r\n        return new Date(\r\n            dayMonthYearArray[2],\r\n            dayMonthYearArray[1] - 1, // Javascript counts month starting from 0\r\n            dayMonthYearArray[0]\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}